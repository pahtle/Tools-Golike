import os
import sys,re
import datetime
from datetime import datetime, timedelta
import json
import random
import platform
try:
  import requests
except ImportError:
  os.system('pip install requests')
  import requests
try:
  from colorama import Back, Fore, Fore, Style, init
except ImportError:
  os.system('pip install colorama')
  from colorama import Back, Fore, Fore, Style, init
try:
  from bs4 import BeautifulSoup
except ImportError:
  os.system('pip3 install beautifulsoup4')
  from bs4 import BeautifulSoup

import time
from time import sleep
import json,ast
os.system('clear')

init(autoreset=True)



def pr3(text):
  lines = text.split('\n')
  for line in lines:
      sys.stdout.write(line+'\n')
      sys.stdout.flush()
      sleep(0.1)
def pr(text):
  for i in range(len(text)+1):
      sys.stdout.write("\r" + text[:i])
      sys.stdout.flush()
      sleep(0.01)
  print()

def time():
  current_time = datetime.now()

  time = current_time.strftime("%M:%S")
  return time

def cint(number):
  while True:
    try:
      numbers = int(input(number))
      return numbers
    except ValueError:
      print(f'{red}Vui l├▓ng chр╗Ѕ nhр║Гp sр╗Љ')



def changetoken(red,green,white):
  if os.path.exists("cache_golike_auth.txt"):
    text=f'''{green}D├ЎNG AUTH C┼е HAY ─љр╗ћI AUTH
{red}[{white}1{red}] ─љр╗ћI AUTH
{red}[{white}2{red}] D├ЎNG AUTH C┼е'''
    pr3(text)
    changetoken=cint(f'{red}NHр║гP Lр╗░A CHр╗їN: {green}')
    print('--------------------------------------------------------------------')
    if changetoken==1:
      file_name = 'cache_golike_auth.txt'
      if os.path.exists(file_name):
          os.remove(file_name)
    else:
      pass


banner=f'''
\033[1;91m
     РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ     РађРађРађРађРађРБђРАаРбцРАђРађРађРађРађРађРађРађРађРађРађ
РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ     РађРађРађРбђРА┤РаЪРаЃРађРађРаЎРБёРађРађРађРађРађРађРађРађРађ
РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ     РађРађРађРађРБаРаІРађРађРађРађРађРађРаўРБєРађРађРађРађРађРађРађРађ
РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ     РађРађРађРбаРаЙРбЏРањРађРађРађРађРађРађРађРбИРАєРађРађРађРађРађРађРађ
РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ     РађРађРБ┐РБХРБёРАѕРаЊРбёРааРАђРађРађРађРБёРБиРађРађРађРађРађРађРађ
РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ  Рађ  РађРађРбђРБ┐РБиРађРаѕРа▒РАёРаЉРБїРаєРађРађРАюРб╗РађРађРађРађРађРађРађ
РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ     РађРађРађРбИРБ┐РА┐Ра│РАєРаљРб┐РБєРаѕРб┐РађРађРАЄРаўРАєРађРађРађРађРађРађ
РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ     РађРађРађРађРб┐РБ┐РБиРАЄРађРађРаѕРбєРаѕРаєРбИРађРађРбБРађРађРађРађРађРађ
РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ     РађРађРађРађРаўРБ┐РБ┐РБ┐РБДРађРађРаѕРбѓРађРАЄРађРађРбеРаЊРБёРађРађРађРађ
РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ     РађРађРађРађРађРБИРБ┐РБ┐РБ┐РБдРБцРаќРАЈРАИРађРБђРА┤РаІРађРаѕРабРАђРађРађ
РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ     РађРађРађРађРађРађРађРађРађРађРбаРБЙРаЂРБ╣РБ┐РБ┐РБ┐РБиРБЙРайРаќРаіРб╣РБђРаёРађРађРађРаѕРбБРАђ
РађРађРађРађРађРађРађРађРађРађРађРађРађ     РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРАЪРБЄРБ░РбФРб╗РбЅРаЅРађРБ┐РАєРађРађРАИРАЈРађРађРађРађРађРађРбЄ
РађРађРађРађРађРађРађ     РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбеРАЄРАЄРаѕРбИРбИРбИРађРађРАЄРАЄРађРађРаЂРа╗РАёРАаРаѓРађРађРађРаў
     РбцРБёРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбаРаЏРаЊРАЄРађРаИРАєРбИРађРбаРБ┐РађРађРађРађРБ░РБ┐РБхРАєРађРађРађРађ
     РаѕРб╗РБиРБдРБђРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРБаРА┐РБдРБђРАЄРађРбДРАЄРађРађРб║РАЪРађРађРађРб░РаЅРБ░РаЪРаіРБаРаѓРађРАИ
     РађРађРб╗РБ┐РБ┐РБиРБдРБђРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРБаРбДРАЎРа║Ра┐РАЄРађРаўРаЄРађРађРбИРБДРађРађРбаРаЃРБЙРБїРаЅРаЕРаГРаЇРБЅРАЄ
Рађ     РађРађРа╗РБ┐РБ┐РБ┐РБ┐РБ┐РБдРБђРађРађРађРађРађРађРађРађРађРађРађРађРБаРБъРБІРађРаѕРађРА│РБДРађРађРађРађРађРбИРАЈРађРађРАъРб░РаЅРаЅРаЅРаЅРаЅРаЊРб╗РаЃ
РађРађ     РађРађРа╣РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБиРАёРађРађРбђРБђРааРацРБцРБцРацРаъРаЊРбаРаѕРАєРађРбБРБИРБЙРаєРађРађРађРађРађРбђРБђРА╝РаЂРА┐РаѕРБЅРБЅРБњРАњРабРА╝Рађ
РађРађ     РађРађРађРаўРБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБјРБйРБХРБцРАХРбІРБцРаЃРБаРАдРбђРА╝РбдРБЙРАцРаџРБЪРБЂРБђРБђРБђРБђРађРБђРБѕРБђРБаРБЙРБЁРађРаЉРаѓРацРаїРБЕРАЄРађ
РађРађРађ     РађРађРађРаўРб┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РАЂРБ║РбЂРБъРБЅРА┤РаЪРАђРађРађРађРаЂРаИРАЁРађРаѕРбиРаѕРаЈРаЎРађРб╣РАЏРађРбЅРађРађРађРБђРБђРБ╝РАЄРађ
РађРађРађРађРађРађ     РађРађРаѕРа╗РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБйРБ┐РАЪРбАРаќРБАРА┤РаѓРБђРБђРБђРБ░РБЂРБђРБђРБИРађРађРађРађРаѕРаЂРађРађРаѕРађРБаРаюРаІРБаРаЂРађ
РађРађРађРађРађРађ     РађРађРађРађРађРаЎРб┐РБ┐РБ┐РБ┐РАЪРб┐РБ┐РБ┐РБиРАЪРбІРБЦРБќРБЅРађРаѕРбЂРАђРацРаџРа┐РБиРАдРбђРБаРБђРабРБёРБђРАаРаћРаІРаЂРађРБ╝РаЃРађРађ
РађРађРађРађРађРађ     РађРађРађРађРађРађРађРаѕРа╗РБ┐РБ┐РАёРаѕРа╗РБ┐РБ┐Рб┐РБЏРБЕРацРањРаЅРаЂРађРађРађРађРађРаЅРањРбцРАђРаЅРаЂРађРађРађРађРађРбђРА┐РађРађРађ
РађРађРађ     РађРађРађРађРађРађРађРађРађРађРађРађРаѕРаЎРб┐РБцРБцРа┤РаЪРаІРаЅРађРађРађРађРађРађРађРађРађРађРађРађРађРаѕРаЉРацРађРађРађРађРађРбЕРаЄРађРађРађ
РађРађ     РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаѕРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ                                                                                                                                                                                                                                   
                                                                                                                                                         
\033[1;32m                                                            
РќѕРќѕРЋЌ          РќѕРќѕРЋЌ   РќѕРќѕРЋЌ    РќѕРќѕРЋЌ   РђЃРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРЋЌ  РќѕРќѕРќѕРќѕРќѕРќѕРЋЌ    РќѕРќѕРќѕРќѕРќѕРќѕРЋЌ  РќѕРќѕРќѕРЋЌ    
 РќѕРќѕРЋЌ        РќѕРќѕРЋћРЋЮ   РќѕРќѕРЋЉ    РќѕРќѕРЋЉ    РЋџРЋљРЋљРќѕРќѕРќѕРЋћРЋљРЋљРЋЮРќѕРќѕРќѕРЋћРЋљРЋљРЋљРќѕРќѕРќѕРЋЌРќѕРќѕРќѕРЋћРЋљРЋљРЋљРќѕРќѕРќѕРЋЌРќѕРќѕРќѕРЋЉ                                    
  РќѕРќѕРЋЌ      РќѕРќѕРЋћРЋЮ    РќѕРќѕРЋЉ    РќѕРќѕРЋЉ       РќѕРќѕРќѕРЋЉ   РќѕРќѕРќѕРЋЉ   РќѕРќѕРќѕРЋЉРќѕРќѕРќѕРЋЉ   РќѕРќѕРќѕРЋЉРќѕРќѕРќѕРЋЉ
   РќѕРќѕРЋЌ    РќѕРќѕРЋћРЋЮ     РќѕРќѕРЋЉ    РќѕРќѕРЋЉ       РќѕРќѕРќѕРЋЉ   РќѕРќѕРќѕРЋЉ   РќѕРќѕРќѕРЋЉРќѕРќѕРќѕРЋЉ   РќѕРќѕРќѕРЋЉРќѕРќѕРќѕРЋЉ
    РќѕРќѕРЋЌ  РќѕРќѕРЋћРЋЮ      РќѕРќѕРЋЉ    РќѕРќѕРЋЉ       РќѕРќѕРќѕРЋЉ   РќѕРќѕРќѕРЋЉ   РќѕРќѕРќѕРЋЉРќѕРќѕРќѕРЋЉ   РќѕРќѕРќѕРЋЉРќѕРќѕРќѕРЋЉ
      РќѕРќѕРќѕРќѕРЋћРЋЮ        РЋџРќѕРќѕРќѕРќѕРќѕРќѕРЋћРЋЮ       РќѕРќѕРќѕРЋЉ    РЋџРќѕРќѕРќѕРќѕРќѕРќѕРЋћРЋЮ  РЋџРќѕРќѕРќѕРќѕРќѕРќѕРЋћРЋЮ РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРЋЌ
      РЋџРЋљРЋљРЋљРЋЮ          РЋџРЋљРЋљРЋљРЋљРЋљРЋЮ        РЋџРЋљРЋљРЋЮ     РЋџРЋљРЋљРЋљРЋљРЋљРЋЮ    РЋџРЋљРЋљРЋљРЋљРЋљРЋЮ  РЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ
 
             
\033[1;39m                 РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ
\033[1;39m                 РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ
\033[1;97mРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќг
\033[1;39mРћїРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђ NGр╗їC V┼е Lр║гP TR├їNH VI├іN РћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћљ
\033[1;32m \033[1;32mPHP \033[1;39mCODE\033[1;32m 3.0                                        \033[1;32m
\033[1;32m                CH├ђO Mр╗фNG Bр║аN ─љ├Ѓ NкаI KIр║ЙM TIр╗ђN

\033[1;35m  FACEBOOK:     https://www.facebook.com/profile.php?id=100070678453308
\033[1;32m  ZALO:         0353994142               
\033[1;35m  NG├ѓN H├ђNG:    MB Bank : 0353994142
\033[1;32m  MOMO:         0353994142
\033[1;39mРћћРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћў
\033[1;97mРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќгРќг                                                              


'''

def bes4(url):
  html_source = requests.get(url).text
  soup = BeautifulSoup(html_source, 'html.parser')
  og_description = soup.find('meta', {'property': 'og:description'})
  if og_description:
      text =og_description['content']
      return text
  else:
      print("Kh├┤ng t├гm thр║Цy thр║╗ meta vр╗Џi thuр╗Ўc t├Гnh property='og:description'")





def checkauth(red,blue,green,yellow,cyan,magenta,orange,xanhnhat,xduong,pink):
 while True :
  while True :
    if not os.path.exists("cache_golike_auth.txt"):
      auth=str(input(f'~[­Ъўѕ]{red}Nhр║Гp auth:{green} '))
      headers ={
    'Authorization'     :auth,
    't':        'VFZSWk5VOUVVVEJQUkZGNFRXYzlQUT09',
    'User-Agent':"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5"
 }
      check=json.loads(requests.get('https://gateway.golike.net/api/tiktok-account',headers=headers).text)
      if check['status']==200:
        name=check['data'][0]['username']
        hea={
'Authorization':auth,
't':    'VFZSWk5VOUVVVEJQUkZGNFRXYzlQUT09',
'User-Agent':"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5"
}
# Chuр╗Ќi JSON ─Љр║Дu v├аo
        data=requests.get('https://gateway.golike.net/api/statistics/report',headers=hea).text
        try:
          data=json.loads(data)
        except :
          break
        # T├Гnh tр╗Ћng pending coin
        total_pending_coin = 0
        for key, value in data.items():
            if isinstance(value, dict) and 'pending_coin' in value:
                total_pending_coin += value['pending_coin']
        xht=data['current_coin']
        text=f'~­Ъўѕ[]{red}TH├ђNH C├ћNG'
        text=f'{red}T├іN T├ђI KHOр║бN: {green} {name}'
        pr(text)
        text=f'{green}${red} Sр╗љ TIр╗ђN TRONG T├ђI KHOр║бN :{green}{xht}─Љ'
        pr(text)
        # In tр╗Ћng pending coin
        text=f'{green}${red} ─љANG DUYр╗єT TIр╗ђN:{green}{total_pending_coin}─Љ'
        pr(text)
        print('--------------------------------------------------------------------')
        text=f'~[­Ъўѕ]{red}H├ЃY {green}CHр╗їN T├ђI KHOр║бN KIр║ЙM TIр╗ђN '
        pr(text)
        nicknames = [item['nickname'] for item in check['data'] if 'nickname' in item]
        for i, nickname in enumerate(nicknames, start=1):
            globals()[f'{i}'] = nickname
        # In gi├А trр╗І cр╗Дa c├Аc biр║┐n
        for i, nickname in enumerate(nicknames, start=1):
            text=f'{red}[{green}{i}{red}]: {globals()[f"{i}"]}'
            pr(text)
        with open("cache_golike_auth.txt", "w") as state_file:
          state_file.write(auth)
        return auth,check
      else:
        text=f'~[­Ъўѕ]{red}SAI AUTH>>{green}NHр║гP Lр║аI'
        continue
    else:
     with open('cache_golike_auth.txt') as f:
        lines = f.readlines()
        auth=lines[0]
        headers ={
      'Authorization'   :auth,
      't':      'VFZSWk5VOUVVVEJQUkZGNFRXYzlQUT09',
      'User-Agent':"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5"
      }
        check=json.loads(requests.get('https://gateway.golike.net/api/tiktok-account',headers=headers).text)
        if check['status']==200:
          name =check['data'][0]['username']
          hea={
                'Authorization':auth,
                't':    'VFZSWk5VOUVVVEJQUkZGNFRXYzlQUT09',
                'User-Agent':"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5"
                  }


          data=requests.get('https://gateway.golike.net/api/statistics/report',headers=hea).text
          try:
            data=json.loads(data)
          except :
            break
          # T├Гnh tр╗Ћng pending coin
          total_pending_coin = 0
          for key, value in data.items():
              if isinstance(value, dict) and 'pending_coin' in value:
                  total_pending_coin += value['pending_coin']
          xht=data['current_coin']
          text=f'{red}T├іN T├ђI KHOр║бN: {green} {name}'
          pr(text)
          text=f'{green}${red} Sр╗љ TIр╗ђN TRONG T├ђI KHOр║бN :{green}{xht}─Љ'
          pr(text)
          # In tр╗Ћng pending coin
          text=f'{green}${red} ─љANG DUYр╗єT TIр╗ђN:{green}{total_pending_coin}─Љ'
          pr(text)
          nicknames = [item['nickname'] for item in check['data'] if 'nickname' in item]
          for i, nickname in enumerate(nicknames, start=1):
              globals()[f'{i}'] = nickname
          print('--------------------------------------------------------------------')
          text=f'~[­Ъўѕ]{red}H├ЃY {green}CHр╗їN T├ђI KHOр║бN KIр║ЙM TIр╗ђN '
          pr(text)
          # In gi├А trр╗І cр╗Дa c├Аc biр║┐n
          for i, nickname in enumerate(nicknames, start=1):
              text=f'{red}[{green}{i}{red}]: {globals()[f"{i}"]}'
              pr(text)

        return auth, check




def get_id_from_nickname_number(ranmau,check,red,blue,green,yellow,cyan,magenta,orange,xanhnhat,xduong,pink):
  while True :

    user_input=input(f'~[­Ъўѕ]{random.choice(ranmau)}>{random.choice(ranmau)}>{random.choice(ranmau)}> {green}Bр║аN H├ЃY CHр╗їN T├ђI KHOр║бN KIр║ЙM TIр╗ђN:{green} ')
    try:
      n = int(user_input)
      if 'data' in check and len(check['data']) >= n:
          idtiktok = check['data'][n-1]['id']
          if idtiktok :
              text=f"{red}ID Sр╗љ {n} L├ђ: {green}{idtiktok}"
              pr(text)
              print('--------------------------------------------------------------------')
              return idtiktok
          else:
              text=f"{red}KH├ћNG THр║цY T├ђI KHOр║бN Tк»каNG р╗еNG."
              pr(text)
      else:
          continue
    except ValueError:
          pr(f"{red}VUI L├њNG CHр╗ѕ NHр║гP Sр╗љ.")
          continue

def getjob(maxjob,delay,auth,idtiktok,red,blue,green,yellow,cyan,magenta,orange,xanhnhat,xduong,pink):
  startmaxjob=1
  job_success=0
  while True :
    while True :
      hea={
      'Authorization':  auth,
     't':       'VFZSWk5VOUVVVEJQUkZGNFRXYzlQUT09',
    'User-Agent':"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5"
}

      try:
        a=requests.get(f'https://gateway.golike.net/api/advertising/publishers/tiktok/jobs?account_id={idtiktok}&data=null',headers=hea).json()
      except :
        break
      try:
        link=a['data']['link']
        id=a['data']['id']
        object_id=a['lock']['object_id']
        os.system(f'termux-open-url {link}')
      except :
        break
      for k in range(delay,-1,-1):
        mau=random.choice(ranmau)
        print(f'{green}NGр╗їC V┼е:{red}[{job_success}/{startmaxjob-1}]{random.choice(ranmau)}LOADING  {random.choice(ranmau)}>> {yellow}NHIр╗єM Vр╗ц Mр╗џI  {random.choice(ranmau)}>>> {random.choice(ranmau)}{k}s ',end='\r')
        sleep(1)
      headers = {
          'authorization': auth,
     't':       'VFZSWk5VOUVVVEJQUkZGNFRXYzlQUT09',
    'User-Agent':"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5"
}

      json_data = {
          'ads_id': id,
          'account_id': idtiktok ,
          'async': True,
          'data': None,
      }

      g = requests.post(
          'https://gateway.golike.net/api/advertising/publishers/tiktok/complete-jobs',
          headers=headers,
          json=json_data,
      ).text
      try:
        g=json.loads(g)
      except :
        break
      if g['status']==200:
        job_success+=1
        print(f'{green}NGр╗їC V┼е:{red}[{job_success}/{startmaxjob-1}] {cyan}[{time()}] | {random.choice(ranmau)}TH├ђNH C├ћNG | {green}FOLLOW | +{g["data"]["prices"]}')
        startmaxjob+=1
        if startmaxjob == maxjob+1:
          print(f'~[+]{pink}─љ├Б bр╗І nhр║Б ,vui l├▓ng ─Љр╗Ћi acc kh├Аc. ')
          return
      else:
        print(f'{green}─љang nhр║Гn tiр╗Ђn       ',end="\r")
        sleep(1)
        g = requests.post(
          'https://gateway.golike.net/api/advertising/publishers/tiktok/complete-jobs',
          headers=headers,
          json=json_data,
      ).text
        try:
          g=json.loads(g)
        except :
          break
        if g['status']==200:
          job_success+=1
          print(f'{green}NGр╗їC V┼е:{red}[{job_success}/{startmaxjob-1}] {cyan}[{time()}] | {random.choice(ranmau)}TH├ђNH C├ћNG | {green}FOLLOW | +{g["data"]["prices"]}─Љ')
          startmaxjob+=1
          if startmaxjob == maxjob+1:
            print(f'~[­Ъўѕ]{pink}─љ├Б bр╗І nhр║Б ,vui l├▓ng ─Љр╗Ћi acc kh├Аc. ')
            return
        if g['status'] !=200:
          print(f'{red}Bр╗ј QUA NHIр╗єM Vр╗ц                   ',end='\r')
          headers = {
              'authorization': auth,
    't':        'VFZSWk5VOUVVVEJQUkZGNFRXYzlQUT09',
    'User-Agent':"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5"
}

          json_data = {
              'description': 'Lр╗Ќi rр╗Њi',
              'users_advertising_id': id,
              'type': 'ads',
              'provider': 'tiktok',
              'fb_id': idtiktok ,
              'error_type': 3,
          }

          requests.post('https://gateway.golike.net/api/report/send', headers=headers, json=json_data)


          headers = {
              'authorization': auth,
    't':        'VFZSWk5VOUVVVEJQUkZGNFRXYzlQUT09',
    'User-Agent':"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5"
}

          json_data = {
              'ads_id': id,
              'object_id': object_id,
              'account_id': idtiktok ,
              'type': 'follow',
          }
          skipjob=requests.post('https://gateway.golike.net/api/advertising/publishers/tiktok/skip-jobs',
              headers=headers,
              json=json_data,
          )
          startmaxjob+=1
          if startmaxjob == maxjob+1:
            print(f'~[­Ъўѕ]{green}─љ├Б bр╗І nhр║Б ,vui l├▓ng ─Љр╗Ћi acc kh├Аc')
            return

def getjob_follow(maxjob,delay,auth,idtiktok,red,blue,green,yellow,cyan,magenta,orange,xanhnhat,xduong,pink):
  startmaxjob=1
  job_success=0
  while True :
    while True :
      hea={
      'Authorization':  auth,
    't':        'VFZSWk5VOUVVVEJQUkZGNFRXYzlQUT09',
    'User-Agent':"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5"
}

      try:
        a=requests.get(f'https://gateway.golike.net/api/advertising/publishers/tiktok/jobs?account_id={idtiktok}&data=null',headers=hea).json()
      except :
        break
      try:
        link=a['data']['link']
        id=a['data']['id']
        object_id=a['lock']['object_id']
        if 'video' in link:
          print(f"{red}─љANG X├ЊA JOB LIKE                             ",end='\r')
          headers = {
              'authorization': auth,
    't':        'VFZSWk5VOUVVVEJQUkZGNFRXYzlQUT09',
    'User-Agent':"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5"
}

          json_data = {
    'description': 'T├┤i ─Љ├Еo l├аm Job n├аy',
    'users_advertising_id': id,
    'type': 'ads',
    'provider': 'tiktok',
    'fb_id': idtiktok,
    'error_type': 0,
}

          response = requests.post('https://gateway.golike.net/api/report/send', headers=headers, json=json_data)


          json_data = {
    'ads_id': id,
    'object_id': object_id,
    'account_id': idtiktok,
    'type': 'like',
}
          response = requests.post(
    'https://gateway.golike.net/api/advertising/publishers/tiktok/skip-jobs',
    headers=headers,
    json=json_data,
)
        else:
          os.system(f'termux-open-url {link}')
          for k in range(delay,-1,-1):
            mau=random.choice(ranmau)
            print(f'{green}Th├аnh c├┤ng:{red}[{job_success}/{startmaxjob-1}]{random.choice(ranmau)}LOADING  {random.choice(ranmau)}>>> {yellow}Nhiр╗Єm vр╗Ц mр╗Џi {random.choice(ranmau)}>>> {random.choice(ranmau)}{k}s',end='\r')
            sleep(1)
          print(f'{red}─љang nhр║Гn tiр╗Ђn                 ',end='\r')
          headers = {
              'authorization': auth,
        't':    'VFZSWk5VOUVVVEJQUkZGNFRXYzlQUT09',
        'User-Agent':"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5"
    }

          json_data = {
              'ads_id': id,
              'account_id': idtiktok ,
              'async': True,
              'data': None,
          }
          try:

            g =requests.post(
            'https://gateway.golike.net/api/advertising/publishers/tiktok/complete-jobs',headers=headers,json=json_data).json()
            if g['status']==200:
              job_success+=1
              print(f'{green}NGр╗їC V┼е:{red}[{job_success}/{startmaxjob-1}] {cyan}[{time()}] | {random.choice(ranmau)}TH├ђNH C├ћNG | {green}FOLLOW | +{g["data"]["prices"]}─Љ')
              startmaxjob+=1
              if startmaxjob == maxjob+1:
                print(f'~[­Ъўѕ]{pink}─љ├Б bр╗І nhр║Б ,vui l├▓ng ─Љр╗Ћi acc kh├Аc. ')
                return

            else:
              print(f'{green}─љang nhр║Гn tiр╗Ђn                     ',end="\r")
              sleep(1)

              try:
                g = requests.post(
                'https://gateway.golike.net/api/advertising/publishers/tiktok/complete-jobs',
                headers=headers,
                json=json_data,
            ).json()
                if g['status']==200:
                  job_success+=1
                  print(f'{green}NGр╗їC V┼е:{red}[{job_success}/{startmaxjob-1}] {cyan}[{time()}] | {random.choice(ranmau)}TH├ђNH C├ћNG | {green}FOLLOW | +{g["data"]["prices"]}─Љ')
                  startmaxjob+=1
                  if startmaxjob == maxjob+1:
                    print(f'~[­Ъўѕ]{pink}─љ├Б bр╗І nhр║Б ,vui l├▓ng ─Љр╗Ћi acc kh├Аc. ')
                    return
                else:
                  print(f'{red}Bр╗ј QUA NHIр╗єM Vр╗ц                   ',end='\r')
                  headers = {
                      'authorization': auth,
            't':        'VFZSWk5VOUVVVEJQUkZGNFRXYzlQUT09',
            'User-Agent':"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5"
        }

                  json_data = {
                      'description': 'Lр╗Ќi rр╗Њi',
                      'users_advertising_id': id,
                      'type': 'ads',
                      'provider': 'tiktok',
                      'fb_id': idtiktok ,
                      'error_type': 3,
                  }

                  requests.post('https://gateway.golike.net/api/report/send', headers=headers, json=json_data)


                  headers = {
                      'authorization': auth,
            't':        'VFZSWk5VOUVVVEJQUkZGNFRXYzlQUT09',
            'User-Agent':"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5"
        }

                  json_data = {
                      'ads_id': id,
                      'object_id': object_id,
                      'account_id': idtiktok ,
                      'type': 'follow',
                  }
                  skipjob=requests.post('https://gateway.golike.net/api/advertising/publishers/tiktok/skip-jobs',
                      headers=headers,
                      json=json_data,
                  )
                  startmaxjob+=1
                  if startmaxjob == maxjob+1:
                    print(f'~[­Ъўѕ]{green}─љ├Б bр╗І nhр║Б ,vui l├▓ng ─Љр╗Ћi acc kh├Аc')
                    return
              except :
                print('─љang thр╗Г lр║Аi......')
                sleep(1)
          except :
            break
      except:
         break

#biр║┐n
#green='\033[38;5;10m'
blue='\033[1;39m'
cyan='\033[1;39m'
white='\033[1;39m'
magenta='\033[1;39m'
orange='\033[1;39m'
xanhnhat = "\033[1;39m"
red = "\033[1;39m"
green = "\033[1;39m"
yellow = "\033[1;39m"
xduong = "\033[1;39m"
pink = "\033[1;39m"
pin = "\033[1;35m"
trang = "\033[1;39m"
whiteb="\033[1;39m"
redb="\033[1;39m"
end='\033[1;39m'
ranmau=(red,blue,green,yellow,cyan,magenta,orange,xanhnhat,xduong,pink)
print(banner)
print(f'{pink}            XIN CH├ђO, Bр║аN ─љ├Ѓ ─љр║ЙN NкаI KIр║ЙM TIр╗ђN')






changetoken(red,green,white)
auth,check =checkauth(red,blue,green,yellow,cyan,magenta,orange,xanhnhat,xduong,pink)
while True:
      if not os.path.exists("setting_golike.txt"):
        idtiktok =get_id_from_nickname_number(ranmau,check,red,blue,green,yellow,cyan,magenta,orange,xanhnhat,xduong,pink)
        print(f'''~[­Ъўѕ]{red}MUр╗љN Lр╗їC JOB LIKE KH├ћNG:
{red}[1]:{green}C├Њ
{red}[2]:{green}KH├ћNG''')
        select_job=cint(f'{red}NHр║гP:{green}')
        delay =cint(f'~[­Ъўѕ]{red}Nhр║Гp delay: {green}')
        maxjob= cint(f'~[­Ъўѕ]{red}Nhр║Гp max: {green}')
        setting={
          "loaijob":select_job,
          "delay":delay,
          "maxjob":maxjob
        }
        with open("setting_golike.txt", "w") as file:
    # Ghi dр╗» liр╗Єu v├аo tр╗Єp tin
              file.write(json.dumps(setting))
        print(f'{cyan}Bр║«T ─љр║дU CHр║аY ',end='\r')
        print('--------------------------------------------------------------------')
        sleep(1)
        if select_job==1:
          getjob_follow(maxjob,delay,auth,idtiktok,red,blue,green,yellow,cyan,magenta,orange,xanhnhat,xduong,pink)
        else:
          getjob(maxjob,delay,auth,idtiktok,red,blue,green,yellow,cyan,magenta,orange,xanhnhat,xduong,pink)
      else:
          idtiktok =get_id_from_nickname_number(ranmau,check,red,blue,green,yellow,cyan,magenta,orange,xanhnhat,xduong,pink)
          select_setting=input(f'{green}Bр║аN c├│ muр╗Љn sр╗Г dр╗Цng c├аi ─Љр║иt c┼Е kh├┤ng?[y/n]{cyan}:' )
          if select_setting == 'n':
             os.remove('setting_golike.txt')
             os.system('clear')
             break

          try:
              with open("setting_golike.txt", "r") as file:
                data_txt=file.read()
                data_json = json.loads(data_txt)
              select_job = int(data_json.get('loaijob'))
              delay = int(data_json.get('delay'))
              maxjob= int(data_json.get('maxjob'))
              print(f'{cyan}Bр║«T ─љр║дU CHр║аY',end='\r')
              print('--------------------------------------------------------------------')
              sleep(1)
              if select_job==1:
                getjob_follow(maxjob,delay,auth,idtiktok,red,blue,green,yellow,cyan,magenta,orange,xanhnhat,xduong,pink)
              else:
                getjob(maxjob,delay,auth,idtiktok,red,blue,green,yellow,cyan,magenta,orange,xanhnhat,xduong,pink)
          except json.JSONDecodeError:
              print("Dр╗» liр╗Єu kh├┤ng hр╗Бp lр╗Є. Vui l├▓ng kiр╗Ѓm tra lр║Аi ─Љр╗Іnh dр║Аng JSON trong tр╗Єp.")

